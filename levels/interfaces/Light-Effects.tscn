[gd_scene load_steps=6 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 0.001

[sub_resource type="VisualShaderNodeScalarInterp" id=3]
default_input_values = [ 0, 0.0, 1, 1.0, 2, 0.7 ]

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Scalar:5
	float n_out5p0 = 0.001000;

// ScalarMix:6
	float n_in6p2 = 0.70000;
	float n_out6p0 = mix(n_out4p1, n_out5p0, n_in6p2);

// Output:0
	COLOR.rgb = n_out4p0;
	COLOR.a = n_out6p0;

}

void light() {
// Output:0

}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 380, 140 )
nodes/fragment/4/node = SubResource( 1 )
nodes/fragment/4/position = Vector2( -160, 40 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( 140, 240 )
nodes/fragment/6/node = SubResource( 3 )
nodes/fragment/6/position = Vector2( 160, 40 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 4, 1, 6, 0, 5, 0, 6, 1, 6, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )

[node name="CanvasModulate" type="CanvasModulate"]
color = Color( 0.470588, 0.470588, 0.470588, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="shader" type="Sprite" parent="."]
material = SubResource( 5 )
position = Vector2( 120, 88 )
z_index = 5
texture = null
